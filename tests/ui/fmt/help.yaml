crates: []
cases:
- cmd: format --help
  stdout: "Format the features in your manifest files\n\nUsage: zepter format [OPTIONS] <COMMAND>\n\nCommands:\n  features  Format the content of each feature in the crate manifest\n  help      Print this message or the help of the given subcommand(s)\n\nOptions:\n  -q, --quiet\n          Only print errors. Supersedes `--log`\n\n      --log <LEVEL>\n          Log level to use\n          \n          [default: info]\n\n      --color\n          Use ANSI terminal colors\n\n      --exit-code-zero\n          Try to exit with code zero if the intended check failed.\n          \n          Will still return 1 in case of an actual error (eg. failed to find some file) or a panic\n          (aka software bug).\n\n  -h, --help\n          Print help (see a summary with '-h')\n"
- cmd: format features --help
  stdout: "Format the content of each feature in the crate manifest\n\nUsage: zepter format features [OPTIONS]\n\nOptions:\n      --manifest-path <MANIFEST_PATH>\n          Cargo manifest path or directory.\n          \n          For directories it appends a `Cargo.toml`.\n\n      --workspace\n          Whether to only consider workspace crates\n\n      --offline\n          Whether to use offline mode\n\n      --locked\n          Whether to use all the locked dependencies from the `Cargo.lock`.\n          \n          Otherwise it may update some dependencies. For CI usage its a good idea to use it.\n\n      --all-features\n          \n\n      --debug-keep-meta <KEEP_META>\n          \n\n  -q, --quiet\n          Only print errors. Supersedes `--log`\n\n      --log <LEVEL>\n          Log level to use\n          \n          [default: info]\n\n      --no-workspace\n          Include dependencies in the formatting check.\n          \n          They will not be modified, unless their path is included in `--modify-paths`.\n\n      --color\n          Use ANSI terminal colors\n\n      --modify-paths <MODIFY_PATHS>\n          Paths that are allowed to be modified by the formatter\n\n  -c, --check\n          DEPRECATED AND IGNORED\n\n      --exit-code-zero\n          Try to exit with code zero if the intended check failed.\n          \n          Will still return 1 in case of an actual error (eg. failed to find some file) or a panic\n          (aka software bug).\n\n  -f, --fix\n          Fix the formatting errors automatically\n\n      --line-width <LINE_WIDTH>\n          The maximal length of a line for a feature\n          \n          [default: 80]\n\n      --mode-per-feature <FEATURE:MODE>\n          Set the formatting mode for a specific feature.\n          \n          Can be specified multiple times. Example:\n          `--mode-per-feature default:sort,default:canonicalize`\n\n      --ignore-feature <FEATURE>\n          Ignore a specific feature across all crates.\n          \n          This is equivalent to `--mode-per-feature FEATURE:none`.\n\n      --print-paths\n          Also print the paths of the offending Cargo.toml files\n\n  -h, --help\n          Print help (see a summary with '-h')\n"
